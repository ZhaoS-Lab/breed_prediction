#######################################################################################
###                                                                                 ###
###    Copyright (C) 2020,  Burair Alsaihati                                        ###
###                                                                                 ###
###    This program is free software: you can redistribute it and/or modify         ###
###    it under the terms of the GNU General Public License as published by         ###
###    the Free Software Foundation version 3                                       ###
###                                                                                 ###
###    This program is distributed in the hope that it will be useful,              ###
###    but WITHOUT ANY WARRANTY; without even the implied warranty of               ###
###    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                ###
###    GNU General Public License for more details.                                 ###
###                                                                                 ###
###    You should have received a copy of the GNU General Public License            ###
###    along with this program.  If not, see <https://www.gnu.org/licenses/>.       ###
###                                                                                 ###
###    Email: burair.alsaihati25@uga.edu, burair_99@yahoo.com, szhao@uga.edu        ###
###                                                                                 ###
#######################################################################################

# Run this shell script to generate files containing variant allele frequencies (VAF) for germline variants called by GATK HaplotypeCaller and depth information from both GATK HaplotypeCaller and DepthOfCoverage for all samples
# Required software: An in-house-developed java package: Pancancer.jar
# GNU/Linux used: cat, sort and gzip
# Pancancer.jar tools used: util.CreateVariantList, util.GetVariantInfoFromVCF and util.AddDepthOfCoverage

######## expected input arguments ########
# A file with one row (three columns) per normal/tumor sample including file path for germline variants called by HaplotypeCaller and annotated by ANNOVAR and Pancancer.jar (see sample files)
annovar_file_list=annovar_file_list.txt
# A file with one row (three columns) per normal/tumor sample including file paths for VCF format files for germline variants called by HaplotypeCaller and base coverage information output by DepthOfCoverage (see sample files)
vcf_file_list=vcf_file_list.txt

# output file generated by util.CreateVariantList with a combined list of all germline variants (one row, seven columns per variant) observed in both normal and tumor of at least one case (see sample file)
output_variant_file=variant_list.txt
# output file generated by util.CreateVariantList with a combined list of all germline variants (one row per variant) and the VAF in each normal and tumor sample (one column per sample, see sample files)
output_VAF_matrix=germline_VAF_matrix.txt
# output file generated by util.CreateVariantList and updated by util.AddDepthOfCoverage with a combined list of all germline variants (one row per variant) and the depth values (total depth from DepthOfCoverage, total depth DP and allele depth AD from HaplotypeCaller) in each normal and tumor sample (one column per sample, see sample files)
output_depths_matrix=germline_depth_matrix.txt

# Create a new variant file list
echo "Creating new variant list"
java -cp Pancancer.jar util.CreateVariantList $annovar_file_list ${output_variant_file}.list include_synonymous

# Sort and add a header line
sort ${output_variant_file}.list > ${output_variant_file}.list.sorted
echo "Gene	Chromosome	Position	Ref	Alt	Protein	Mutation_type" > ${output_variant_file}.header
cat ${output_variant_file}.header ${output_variant_file}.list.sorted > ${output_variant_file}.sorted
rm ${output_variant_file}.header ${output_variant_file}.list ${output_variant_file}.list.sorted

# create variant VAF and depths matrix files
echo ""
echo "Creating variant VAF matrix"
java -Xmx32g -cp Pancancer.jar util.GetVariantInfoFromVCF ${output_variant_file}.sorted 7 $vcf_file_list $output_VAF_matrix VAF

echo ""
echo "Creating variant depths matrix"
java -Xmx32g -cp Pancancer.jar util.GetVariantInfoFromVCF ${output_variant_file}.sorted 7 $vcf_file_list $output_depths_matrix depths

echo ""
echo "Adding depth from DepthOfCoverage bed files"
java -Xmx32g -cp Pancancer.jar util.AddDepthOfCoverage $output_depths_matrix 7 $vcf_file_list overwrite

gzip $output_VAF_matrix
gzip $output_depths_matrix
